//====================================================================================================================//
//                                              Background & gradient
//====================================================================================================================//

.background-clip(@argument: padding-box) {
  -moz-background-clip: @argument;
  -webkit-background-clip: @argument;
  background-clip: @argument;
}

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear, left bottom,left top, color-stop(0, @start), color-stop(1, @stop));
  background: -ms-linear-gradient(bottom, @start, @stop);
  background: -moz-linear-gradient(center bottom, @start 0%, @stop 100%);
  background: -o-linear-gradient(@stop, @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop, @start));
}

.bw-gradient(@color: #F5F5F5, @start: 0, @stop: 255) {
  background: @color;
  background: -webkit-gradient(linear, left bottom,left top,color-stop(0, rgb(@start,@start,@start)),color-stop(1, rgb(@stop,@stop,@stop)));
  background: -ms-linear-gradient(bottom,rgb(@start,@start,@start) 0%,rgb(@stop,@stop,@stop) 100%);
  background: -moz-linear-gradient(center bottom,rgb(@start,@start,@start) 0%,rgb(@stop,@stop,@stop) 100%);
  background: -o-linear-gradient(rgb(@stop,@stop,@stop),rgb(@start,@start,@start));
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}

//====================================================================================================================//
//                                              Borders and shadow
//====================================================================================================================//

.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
  -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.box-shadow(@arguments) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}

.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE, @borderwidth: 1px) {
  border-top: solid @borderwidth @top-color;
  border-left: solid @borderwidth @left-color;
  border-right: solid @borderwidth @right-color;
  border-bottom: solid @borderwidth @bottom-color;
}

.drop-shadow(@x-axis: 0px, @y-axis: 2px, @blur: 0px, @color: #36650f) {
  -webkit-box-shadow: @x-axis @y-axis @blur @color;
  -moz-box-shadow: @x-axis @y-axis @blur @color;
  box-shadow: @x-axis @y-axis @blur @color;
}

.no-drop-shadow(@no-drop-shadow: 0) {
  -webkit-box-shadow: @no-drop-shadow @no-drop-shadow @no-drop-shadow @no-drop-shadow;
  -moz-box-shadow: @no-drop-shadow @no-drop-shadow @no-drop-shadow @no-drop-shadow;
  box-shadow: @no-drop-shadow @no-drop-shadow @no-drop-shadow @no-drop-shadow;
}

.rounded(@radius: 2px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  .background-clip(padding-box);
}

.text-shadow (@color: rgba(0, 0, 0, 0.4), @xPos: 1px, @yPos: 1px, @blur: 0px) {
  -webkit-text-shadow: @xPos @yPos @blur @color;
  -moz-text-shadow: @xPos @yPos @blur @color;
  -ms-text-shadow: @xPos @yPos @blur @color;
  -o-text-shadow: @xPos @yPos @blur @color;
  text-shadow: @xPos @yPos @blur @color;
}

//====================================================================================================================//
//                                              Animation
//====================================================================================================================//

.transition(@property: all, @duration:0.2s, @ease:ease-out) {
  -webkit-transition: @property @duration @ease;
  -moz-transition: @property @duration @ease;
  -o-transition: @property @duration @ease;
  transition: @property @duration @ease;
}

.transition-duration(@duration: 0.2s) {
  -moz-transition-duration: @duration;
  -webkit-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}

.animation-duration(@duration: 0.2s) {
  -moz-animation-duration: @duration;
  -webkit-animation-duration: @duration;
  -o-animation-duration: @duration;
  animation-duration: @duration;
}

.animation-delay(@delay: 0.2s) {
  -moz-animation-delay: @delay;
  -webkit-animation-delay: @delay;
  -o-animation-delay: @delay;
  animation-delay: @delay;
}

//====================================================================================================================//
//                                              Transforms
//====================================================================================================================//

.translate(@x:0, @y:0) {
  .transform(translate(@x, @y));
}

.transform(...) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -o-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}

.rotation(@deg:5deg){
  .transform(rotate(@deg));
}

.scale(@ratio:1.5){
  .transform(scale(@ratio));
}

//====================================================================================================================//
//                                              Others
//====================================================================================================================//

.mixin (@a) when (lightness(@a) >= 50%) {
  background-color: black;
}
.mixin (@a) when (lightness(@a) < 50%) {
  background-color: white;
}
.mixin (@a) {
  color: @a;
}

.opacity(@opacity: 0.5) {
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
  @opperc: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}

.box-sizing(@sizing: border-box) {
  -ms-box-sizing: @sizing;
  -moz-box-sizing: @sizing;
  -webkit-box-sizing: @sizing;
  box-sizing: @sizing;
}

.user-select(@argument: none) { 
  -webkit-user-select: @argument;
  -moz-user-select: @argument;
  -ms-user-select: @argument;
  user-select: @argument;
}

.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
  -moz-column-width: @colwidth;
  -moz-column-count: @colcount;
  -moz-column-gap: @colgap;
  -moz-column-rule-color: @columnRuleColor;
  -moz-column-rule-style: @columnRuleStyle;
  -moz-column-rule-width: @columnRuleWidth;
  -webkit-column-width: @colwidth;
  -webkit-column-count: @colcount;
  -webkit-column-gap: @colgap;
  -webkit-column-rule-color: @columnRuleColor;
  -webkit-column-rule-style: @columnRuleStyle;
  -webkit-column-rule-width: @columnRuleWidth;
  column-width: @colwidth;
  column-count: @colcount;
  column-gap: @colgap;
  column-rule-color: @columnRuleColor;
  column-rule-style: @columnRuleStyle;
  column-rule-width: @columnRuleWidth;
}
